//music installer

// DO NOT INCLUDE THE NATIVE INSTRUMENT MAP (NIMAP). This installer is a complete replacement for it.

// WANT TO ADD SONGS? Scroll down to Part 2.

// For best results, use midi2agb, NOT mid2agb, to convert your song.
// If EA tells you "no code named .align found", go into the .event file generated from the .s and find-and-replace the ".align  2"s to "ALIGN 4"s.

// instruments using custom samples: 0, 6, 24, 30, 34, 48, 52, 55, 60, 61, 68, 81, 104
// instruments using key splits set up with vanilla sample pointers: 19, 49, 56, 70, 73

#ifdef _FE8_

#define voicegroup000 MusicVoices
//voicegroup000 is the default table pointer given in .s files. This way you don't have to go into the .s file and change that for a bunch of songs.


// --------------- PART 1: ENGINE STUFF ---------------

#include "drumfix_fe8.event"
//Recommended if using vanilla drums. No need to use if you've made your own drum tables; all it does is change pointers in the vanilla tables.

//installation of ipatix's sound mixer (required for GS synths)
PUSH
ORG $d01d0
WORD $03006cb0; BYTE 0x18 0x02
ORG $CF53C
WORD $03006cb1
ORG $D01CC
POIN Sound_Mixer_Dump
POP
ALIGN 4

Sound_Mixer_Dump:
#incbin "SoundMixer.bin"

//unlock all songs in sound room
PUSH
ORG $AEDE0
BYTE 0xFF
POP



// --------------- PART 2: SONGS ---------------

//macro definitions for setting the song table
  #define SongTableOffset  0x224470
  #define SongTable(index,SongPointer,Group) "PUSH; ORG SongTableOffset+(8*index); POIN SongPointer; SHORT Group Group; POP"
#define BattleMusicGroup 0
#define MapMusicGroup 1
#define SFXGroup 6
//#define VoicegroupOffset 0x207470 //if you want to use a static offset

// Venus Lighthouse (Golden Sun) - player phase
{
SongTable(VenusLighthouse,gsvenuslighthousefevd,1)
#include "songs/gsvenuslighthousefevd.event"
}
// Praying Hands (Castlevania: Belmont's Revenge) - player phase
{
SongTable(PrayingHands,cvbrprayinghands,1)
#include "songs/cvbrprayinghands.event"
}
// Wall of Defense (Ogre Battle (PS1)) - player phase
{
SongTable(WallOfDefense,obps1wallofdefense,1)
#include "songs/obps1wallofdefense.event"
}
// Hydra (Thunder Force 3) - player phase
{
SongTable(Hydra,tf3hydra,1)
#include "songs/tf3hydra.event"
}
// Woodland Ruins (Etrian Odyssey 2) - player phase
{
SongTable(WoodlandRuins,eo2woodlandruins,1)
#include "songs/eo2woodlandruins.event"
}
// Soldat (Langrisser 2) - player phase
{
SongTable(Lang2Soldier,lang2soldat,1)
#include "songs/lang2soldat.event"
}
// The Grubby Blue Dark (Thunder Force 3) (arrange credit: nZero) - player phase
{
SongTable(GrubbyBlueDark,tf3thegrubbybluedark,1)
#include "songs/tf3thegrubbybluedark.event"
}
// Fog of Phantom (Ogre Battle (PS1)) - player phase fog of war
{
SongTable(FogOfPhantom,obps1fogofphantom,1)
#include "songs/obps1fogofphantom.event"
}
// Top Floor (Castlevania: Aria of Sorrow) - player phase
{
SongTable(TopFloor,cvaostopfloor,1)
#include "songs/cvaostopfloor.event"
}
// Distant Roads but evil - player phase endgame
{
SongTable(0xe,themostdistantroad,1)
#include "songs/themostdistantroad.event"
}
// Morgan (Langrisser 2) - enemy phase
{
SongTable(Morgan,lang2morgan,1)
#include "songs/lang2morgan.event"
}
// At a Place Nobody Knows (Mega Man Legends) - enemy phase
{
SongTable(AtAPlaceNobodyKnows,mmlataplacenobodyknows,1)
#include "songs/mmlataplacenobodyknows.event"
}
// Elysium Battle (Mega Man Legends 2) - enemy phase
{
SongTable(Elysium,mml2elysiumbattle,1)
#include "songs/mml2elysiumbattle.event"
}
// Bloodpool (Act Raiser) - enemy phase
{
SongTable(Bloodpool,arbloodpool,1)
#include "songs/arbloodpool.event"
}
// Hunger Made Them Desperate (Thunder Force 3) (arrange credit: nZero) - enemy phase endgame
{
SongTable(HungerMadeThemDesperate,tf3hungermadethemdesperate,1)
#include "songs/tf3hungermadethemdesperate.event"
}
// Boss (Shatterhand) - boss
{
SongTable(Shatterhand,shatterhandboss,0)
#include "songs/shatterhandboss.event"
}
// Evil Gods (Castlevania: Belmont's Revenge) - powerful boss
{
SongTable(EvilGods,cvbrevilgods,0)
#include "songs/cvbrevilgods.event"
}
// Big Battle (Castlevania: Circle of the Moon) - for Zaim's chapter
{
SongTable(BigBattle,cvcotmbigbattle,1)
#include "songs/cvcotmbigbattle.event"
}
// Binding Vow but doesn't take 1000 years to start up/I ran out of ideas - ally phase
{
SongTable(0xf,bindingneckties,1)
#include "songs/bindingneckties.event"
}
// Action Game Master (Action 52) - victory is near
{
SongTable(Cheetahmen,cheetahmen,1)
#include "songs/cheetahmen.event"
}
// Thrust the Sword of Justice (Star Ocean: The Second Story) - generic attack
{
SongTable(0x19,so2battle,0)
#include "songs/so2battle.event"
}
// Chivalry and Savagery (Ogre Battle (PS1)) - generic defense
{
SongTable(0x1a,obps1chivalryandsavagery,0)
#include "songs/obps1chivalryandsavagery.event"
}
// The First Campaign (Etrian Odyssey 2) - recruitment
{
SongTable(TheFirstCampaign,eo2thefirstcampaign,0)
#include "songs/eo2thefirstcampaign.event"
}
// Requiem (Langrisser 2) - unit died
{
SongTable(0x3f,lang2requiem,0)
#include "songs/lang2requiem.event"
}

{
SongTable(InkMeUp,InkMeUpSplatoon,1)
#include "songs/InkMeUpSplatoon.event"
}

{
SongTable(TheBoysGotWings,ys3wings,1)
#include "songs/ys3wings.event"
}

{
SongTable(StraightToTheTop,aelevate,1)
#include "songs/aelevate.event"
}
{
SongTable(IevanPolkka,IevanPolka,1)
#include "songs/IevanPolkka.event"
}

// Add your song here!


// --------------- PART 3: VOICE TABLES ---------------

//voice table entry definitions
  #define VoiceDirect(VoiceTable,VoiceIndex,BaseNote,Address,FixedFreq,IsForcedPan,Pan,EnvAtk,EnvDec,EnvSus,EnvRel) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $00+FixedFreq*0x8 BaseNote $00 IsForcedPan*80+Pan; POIN Address; BYTE EnvAtk EnvDec EnvSus EnvRel"
  #define VoiceSquare1(VoiceTable,VoiceIndex,DutyCycle,NoteOffWithNoise,SweepTime,SweepShift,EnvAtk,EnvDec,EnvSus,EnvRel) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $01+NoteOffWithNoise*8 $3c $00 SweepTime+SweepShift DutyCycle $00 $00 $00 EnvAtk EnvDec EnvSus EnvRel" 
  #define VoiceSquare2(VoiceTable,VoiceIndex,DutyCycle,NoteOffWithNoise,EnvAtk,EnvDec,EnvSus,EnvRel) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $02+NoteOffWithNoise*8 $3c $00 $00 DutyCycle $00 $00 $00 EnvAtk EnvDec EnvSus EnvRel" 
  #define VoiceWave(VoiceTable,VoiceIndex,WaveData,NoteOffWithNoise,EnvAtk,EnvDec,EnvSus,EnvRel) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $03+NoteOffWithNoise*8 $3c $00 $00 POIN WaveData EnvAtk EnvDec EnvSus EnvRel"
  #define VoiceNoise(VoiceTable,VoiceIndex,NoisePattern,NoteOffWithNoise,EnvAtk,EnvDec,EnvSus,EnvRel) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $04+NoteOffWithNoise*8 $3c $00 $00 NoisePattern  $00 $00 $00 EnvAtk EnvDec EnvSus EnvRel"
  #define VoiceMulti(VoiceTable,VoiceIndex,MultiSampleTable,NoteChart) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $40 $3c $00 $00; POIN MultiSampleTable; POIN NoteChart"
  #define VoiceDrum(VoiceTable,VoiceIndex,DrumTable) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $80 $3c $00 $00; POIN DrumTable; BYTE $00 $00 $00 $00"
  #define VoiceDummy(VoiceTable,VoiceIndex) "ORG VoiceTable+VoiceIndex*0x0c; BYTE $01 $3c $00 $00 $02 $00 $00 $00 $00 $00 $0f $00" 
//VoiceDummy is for quick demarcation of unused/empty instrument slots

//Explanation of parameters:
//VoiceTable: the voice table you are writing to. Your instrument map is a voice table; multi instruments and drum instruments also get their own respective table for their own set of samples. This parameter is mainly a precaution against tables overwriting one another.
//VoiceIndex: the slot in the voice table for this instrument (for example, 0 is typically used for the acoustic grand piano). 0x0 thru 0x7f correspond to instruments 0 thru 127.
//BaseNote: the base note. I recommend always using 0x3c (middle C) because I don't think GBA FE supports other notes. Left the option just in case.
//Address: the location of the sample. If you're using a custom sample, this will be a label pointing EA to the data for your sample which will be written to the rom.
//If you just want to use a vanilla sample, you can just use its vanilla address instead of using a label.
//FixedFreq: fixes the frequency of the note so it cannot change in pitch. Typically used for drums. 0x10 =on; 0x0 =off.
//IsForcedPan: whether or not the note should be forced to a certain L/R balance. Typically used for drums. 0x1 =on; 0x0 =off.
//Pan: how far left or right to pan the sample if you turned on IsForcedPan. 0x00 =off. 0x80 =0 (all the way left); 0xff =127 (all the way right).
//DutyCycle: the ratio of a square wave's segments, which will change its sound. 0x0 is 12,5%; 0x1 is 25%; 0x2 is 50%; 0x3 is 75%.
//NoteOffWithNoise: the note will be cut off by noise. Used very rarely in sound effects. 0x0 =off; 0x1 =on.
//SweepTime: how long it takes a square wave to sweep from one pitch to another. Sometimes used in sound effects (think weird magic sounds). Must be a multiple of 0x10. 00: disable. 0x10: 7,8ms. 0x20: 15,6ms. 0x30: 23,4ms 0x40: 31,3ms. 0x50: 39,1ms. 0x60: 46,9ms. 0x70: 54,7ms.
//SweepShift: how many bits the wave should be sweeped in pitch. 0x0 or 0x8: disable. 0x1 thru 0x7: add 2 thru 8 bits. 0x9 thru 0xf: subtract 2 thru 8 bits.
//WaveData: a pointer to a 16-byte chart determining the pattern of the wave. 0 thru f determines the amplitude (y co-ordinate) of the wave, with 7-8 being 0 dB.
//example: 0011223468abcdeeffeeddcb97543211 makes sort of a sine wave. ffffffffffffffff0000000000000000 is a square wave.
//NoisePattern: how many samples are used to generate the noise. 0x0: 32768 samples; 0x1: 256 samples.
//MultiSampleTable: a pointer to another instrument table for your multi instrument to use for its samples.
//NoteChart: a label pointing to included data for the note chart, a series of bytes that say which notes should play which samples.
//DrumTable: a pointer to another instrument table for your drums to use.
//Envelope information:
//EnvAtk: Attack, or how long it takes for the instrument to go from zero to full volume when a note starts to be played. Higher values are faster.
//EnvDec: Decay, or how quickly the note loses volume after the attack. Higher values are longer. 0x0 to make the sample not decay at all.
//EnvSus: Sustain, or what level of volume the note should rest at after the attack and decay but while the note is still playing. Higher values are louder. 0xff is the maximum for samples; 0xf is the maximum for waves and noise.
//EnvRel: Release, or how long it takes for the note to drop to zero volume after it is no longer being played. Higher values are longer.



//Just for reference, the note indicated after the name of each instrument is the base note. If your music is sounding
//grating on the ears or inaudible, make sure your samples aren't straying too far from their base notes. Multi-sample
//instruments will have a range instead of a single note. C3 is middle C (Anvil Studio refers to middle C as C5 or C4,
//depending on your settings). A number in parentheses (e.g. +1) indicates the sample being an octave higher or lower
//than expected (e.g. a C3 with instrument 80 (square lead) sounds like a C4).

//MESSAGE Main voice table begins at CURRENTOFFSET
//Uncomment the above line if you want to know where exactly the installer is writing the voice table every time.
//This is useful to ascertain the table location when using GBAMusRiper to make a soundfont.

MusicVoices:
//0 acoustic grand - C2-C5
VoiceMulti(MusicVoices,0x0,PianoTable,PianoChart)
//1
VoiceMulti(MusicVoices,0x1,PianoTable,PianoChart)
//2 acoustic bass (not a piano!) - C1
VoiceDirect(MusicVoices,0x2,0x3c,0x029918C,0x0,0x0,0x0,0xff,0xfc,0x80,0xb0)
//3 low electric piano (moved from 29)
VoiceDirect(MusicVoices,0x3,0x3c,0x02AE988,0x0,0x0,0x0,0xff,0xfc,0x0,0xb0)
//4 electric piano 1 - C4
VoiceDirect(MusicVoices,0x4,0x3c,0x02BB7F4,0x0,0x0,0x0,0xff,0xfc,0x0,0xcc)
//5 electric piano 2 (used in item-get jingle) - C3
VoiceDirect(MusicVoices,0x5,0x3c,0x02CF3B0,0x0,0x0,0x0,0xff,0xfe,0x0,0xd0)
//6 harpsichord - C2
VoiceDirect(MusicVoices,0x6,0x3c,inst6,0x0,0x0,0x0,0xff,0xfa,0x0,0xc0)
//7 harpsichord w/ loop - C2
VoiceDirect(MusicVoices,0x7,0x3c,inst6,0x0,0x0,0x0,0xff,0xf5,0x80,0xc0)
//8 celesta - C4
VoiceDirect(MusicVoices,0x8,0x3c,0x04C4758,0x0,0x0,0x0,0xff,0xf5,0x0,0xd0)
//9
VoiceDummy(MusicVoices,0x9)
//10 music box - C4
VoiceDirect(MusicVoices,0xa,0x3c,0x02C0D0C,0x0,0x0,0x0,0xff,0x0,0xff,0xe0)
//11 vibraphone (same sample as celesta? recommend use 8 instead) - C4
VoiceDirect(MusicVoices,0xb,0x3c,0x04C4758,0x0,0x0,0x0,0xff,0xf0,0x0,0xd0)
//12
VoiceDummy(MusicVoices,0xc)
//13 xylophone - C3
VoiceDirect(MusicVoices,0xd,0x3c,0x029ED58,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
//14 tubular bells - C3
VoiceDirect(MusicVoices,0xe,0x3c,0x02263B4,0x0,0x0,0x0,0xff,0xfb,0x0,0xd0)
//15 dulcimer - G2
VoiceDirect(MusicVoices,0xf,0x3c,0x04D60BC,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//16
VoiceDummy(MusicVoices,0x10)
//17
VoiceDummy(MusicVoices,0x11)
//18 rock organ - C4 (-1)
VoiceDirect(MusicVoices,0x12,0x3c,0x02B235C,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
//19 church organ - C3-C4
VoiceMulti(MusicVoices,0x13,OrganTable,C3toC4Chart)
//20 church organ (kept for compatibility purposes; use 19 instead) - C4
VoiceMulti(MusicVoices,0x14,OrganTable,C3toC4Chart)
//21 accordion - G2
VoiceDirect(MusicVoices,0x15,0x3c,0x02AC868,0x0,0x0,0x0,0x40,0x0,0xff,0xa0)
//22
VoiceDummy(MusicVoices,22)
//23 some kind of woodwind (not an accordion) - C4
VoiceDirect(MusicVoices,0x17,0x3c,0x04D5A44,0x0,0x0,0x0,0x40,0x0,0xff,0xc0)
//24 nylon - C4
VoiceDirect(MusicVoices,0x18,0x3c,inst24,0x0,0x0,0x0,0xff,0xf9,0x0,0xc0)
//25
VoiceDummy(MusicVoices,0x19)
//26
VoiceDummy(MusicVoices,0x1a)
//27
VoiceDummy(MusicVoices,0x1b)
//28 elec guitar muted - C2
VoiceDirect(MusicVoices,0x1c,0x3c,0x04C3630,0x0,0x0,0x0,0xff,0xfa,0xc8,0xa0)
//29
VoiceMulti(MusicVoices,0x1d,DistortTable,DistortChart)
//30 distort guitar  - C1-A5
VoiceMulti(MusicVoices,0x1e,DistortTable,DistortChart)
//31 guitar slide (Powerful Foe) - C3
VoiceDirect(MusicVoices,0x1f,0x3c,0x04CE300,0x0,0x0,0x0,0xff,0x0,0xff,0xcc)
//32 acoustic bass - C1
VoiceDirect(MusicVoices,0x20,0x3c,0x029918C,0x0,0x0,0x0,0xff,0xf5,0x80,0xb0)
//33 elec bass (finger) - C2 (-1)
VoiceDirect(MusicVoices,0x21,0x3c,0x0227988,0x0,0x0,0x0,0xff,0x0,0xff,0xa5)
//34 elec bass (pick) (FE6) - C2 (-1)
VoiceDirect(MusicVoices,0x22,0x3c,inst34,0x0,0x0,0x0,0xff,0xfa,0x80,0xa5)
//35 wave bass - C2 (-1)
VoiceDirect(MusicVoices,0x23,0x3c,0x02962B0,0x0,0x0,0x0,0xff,0xfa,0x80,0xb0)
//36 slap bass - C2 (-1)
VoiceDirect(MusicVoices,0x24,0x3c,0x02AC224,0x0,0x0,0x0,0xff,0xfa,0x80,0xb0)
//37 GS square wave bass
VoiceDirect(MusicVoices,0x25,0x3c,GSDanceBass,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
//38 synth bass 1 - C1
VoiceDirect(MusicVoices,0x26,0x3c,0x04CD8AC,0x0,0x0,0x0,0xff,0x0,0xff,0xa5)
//39 synth bass 2 - C2 (-1)
VoiceDirect(MusicVoices,0x27,0x3c,0x0289978,0x0,0x0,0x0,0xff,0xfa,0x80,0xa5)
//40 strings2 (kept for compatibility purposes; use 49 instead)
VoiceMulti(MusicVoices,0x28,Strings2Table,C2toC5Chart)
//41 strings2 (kept for compatibility purposes; use 49 instead)
VoiceMulti(MusicVoices,0x29,Strings2Table,C2toC5Chart)
//42 strings2 (kept for compatibility purposes; use 49 instead)
VoiceMulti(MusicVoices,0x2a,Strings2Table,C2toC5Chart)
//43
VoiceDummy(MusicVoices,0x2b)
//44
VoiceDummy(MusicVoices,0x2c)
//45 pizzicato - C3
VoiceDirect(MusicVoices,0x2d,0x3c,0x0281974,0x0,0x0,0x0,0xff,0xf0,0x80,0xd0)
//46 orchestral strings (harp) - C3
VoiceDirect(MusicVoices,0x2e,0x3c,0x022807C,0x0,0x0,0x0,0xff,0xf5,0x0,0xd0)
//47 timpani - G2
VoiceDirect(MusicVoices,0x2f,0x3c,0x0228C7C,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
//48 strings1 - C1-C6
VoiceMulti(MusicVoices,0x30,Strings1Table,Strings1Chart)
//49 strings2 - C3-C5
VoiceMulti(MusicVoices,0x31,Strings2Table,C2toC5Chart)
//50 strings1 (kept for compatibility purposes; use 48 instead) (if you are looking for synthstrings, try 105)
VoiceMulti(MusicVoices,0x32,Strings1Table,Strings1Chart)
//51 strings1 (kept for compatibility purposes; use 48 instead) (if you are looking for synthstrings, try 105)
VoiceMulti(MusicVoices,0x33,Strings1Table,Strings1Chart)
//52 choir - G2-C5
VoiceMulti(MusicVoices,0x34,ChoirTable,ChoirChart)
//53
VoiceMulti(MusicVoices,0x35,ChoirTable,ChoirChart)
//54 choir (kept for compatibility purposes; use 52 instead)
VoiceMulti(MusicVoices,0x36,ChoirTable,ChoirChart)
//55 orchestra hit
VoiceDirect(MusicVoices,0x37,0x3c,inst55,0x0,0x0,0x0,0xff,0xf5,0x0,0xd0)
//56 trumpet - C4-C5
VoiceMulti(MusicVoices,0x38,TrumpetTable,TrumpetChart)
//57 trombone - C3
VoiceDirect(MusicVoices,0x39,0x3c,0x0274F48,0x0,0x0,0x0,0xff,0x0,0xff,0xa5)
//58 (kept for compatibility purposes; use 60 instead)
VoiceMulti(MusicVoices,0x3a,FrenchsectTable,FrenchsectChart)
//59 muted trumpet - C4
VoiceDirect(MusicVoices,0x3b,0x3c,0x04D8188,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//60 French horn section (the source of a lot of the misc brass samples in the original game) - E2-C5
VoiceMulti(MusicVoices,0x3c,FrenchsectTable,FrenchsectChart)
//61 brass section (an actual brass section) - G2-C5
VoiceMulti(MusicVoices,0x3d,BrassTable,BrassChart)
//62 (kept for compatibility purposes; use 61 instead, or 103 if you're looking for something synthier)
VoiceMulti(MusicVoices,0x3e,BrassTable,BrassChart)
//63 (kept for compatibility purposes; use 61 instead, or 103 if you're looking for something synthier)
VoiceMulti(MusicVoices,0x3f,BrassTable,BrassChart)
//64 some kind of bassoon - C3
VoiceDirect(MusicVoices,0x40,0x3c,0x0280AF0,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//65 "arng" trumpet (Into the Shadow of Victory) - C3
VoiceMulti(MusicVoices,0x41,BrassTable,BrassChart)
//VoiceDirect(MusicVoices,0x41,0x3c,0x024BBAC,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
//66 trombone 2 (Shadow of the Enemy) - C3
VoiceDirect(MusicVoices,0x42,0x3c,0x0265DDC,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//67 English horn or oboe (shorter sample than 69) - C3
VoiceDirect(MusicVoices,0x43,0x3c,0x0296E54,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//68 oboe - C3-C4
VoiceMulti(MusicVoices,0x44,OboeTable,C2toC5Chart)
//69 English horn or oboe (Raise Your Spirits) - C3
VoiceDirect(MusicVoices,0x45,0x3c,0x04C4F6C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//70 bassoon - C2-C4
VoiceMulti(MusicVoices,0x46,BassoonTable,C2toC5Chart)
//71 clarinet - C4
VoiceDirect(MusicVoices,0x47,0x3c,0x027E28C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//72
VoiceDummy(MusicVoices,0x48)
//73 flute - C4-C5
VoiceMulti(MusicVoices,0x49,FluteTable,C3toC5Chart)
//74 recorder (use 73 instead) - C4
VoiceDirect(MusicVoices,0x4a,0x3c,0x04D373C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//75 pan flute - C4
VoiceDirect(MusicVoices,0x4b,0x3c,0x04D9314,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//76 pan flute with lower attack (recommend use 75 instead) - C4
VoiceDirect(MusicVoices,0x4c,0x3c,0x04D9314,0x0,0x0,0x0,0x10,0xfe,0x0,0xd0)
//77 ocarina (shifted one octave up) - C4 (+1)
VoiceDirect(MusicVoices,0x4d,0x3c,0x04BE7C0,0x0,0x0,0x0,0x30,0xfe,0x0,0xc0)
//78 bassoon c3 (kept for compatibility purposes; use 70 instead) - C3
VoiceDirect(MusicVoices,0x4e,0x3c,0x0280AF0,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//79 ocarina - C4
VoiceDirect(MusicVoices,0x4f,0x3c,0x02ADD3C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//80 lead (square) - C3 (+1)
VoiceDirect(MusicVoices,0x50,0x3c,0x02BA464,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//81 saw lead - C3-C5 (-1)
VoiceMulti(MusicVoices,0x51,SawleadTable,C3toC6Chart)
//82 GS triangle wave
VoiceDirect(MusicVoices,0x52,0x3c,GSTriangle,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//83 GS saw wave
VoiceDirect(MusicVoices,0x53,0x3c,GSSaw,0x0,0x0,0x0,0xff,0x0,0xff,0x80)
//84
VoiceDummy(MusicVoices,0x54)
//85 choir (kept for compatibility purposes; use 52 instead) - C4
VoiceMulti(MusicVoices,0x55,ChoirTable,ChoirChart)
//86 a slightly shorter version of the trombone (use 57 instead) - C3
VoiceDirect(MusicVoices,0x56,0x3c,0x02A1728,0x0,0x0,0x0,0x80,0x0,0xff,0xc0)
//87 GS dance-y square wave
VoiceDirect(MusicVoices,0x57,0x3c,GSDance,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//88 pad (saw lead)
VoiceMulti(MusicVoices,0x58,SawleadPadTable,C3toC5Chart)
//89 pad (triangle)
VoiceDirect(MusicVoices,0x59,0x3c,GSTriangle,0x0,0x0,0x0,0x7,0xfe,0x0,0xf0)
//90 muted trumpet (kept for compatibility purposes; use 59 instead) - C4
VoiceDirect(MusicVoices,0x5a,0x3c,0x04D8188,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//91 pad (choir)
VoiceMulti(MusicVoices,0x5b,ChoirPadTable,ChoirChart)
//92 pad (electric piano) - C4
VoiceDirect(MusicVoices,0x5c,0x3c,0x02BB7F4,0x0,0x0,0x0,0x8,0xfe,0x0,0xf0)
//93 pad (brass)
VoiceMulti(MusicVoices,0x5d,BrassPadTable,BrassChart)
//94 pad (brightness) - C4
VoiceDirect(MusicVoices,0x5e,0x3c,0x04BF480,0x0,0x0,0x0,0x5,0xff,0x0,0xf0)
//95 pad (square lead) - C3 (+1)
VoiceDirect(MusicVoices,0x5f,0x3c,0x02BA464,0x0,0x0,0x0,0x8,0xfe,0x0,0xf0)
//96
VoiceDummy(MusicVoices,0x60)
//97
VoiceDummy(MusicVoices,0x61)
//98 (kept for compatibility purposes; use 58 instead) - C3
VoiceMulti(MusicVoices,0x62,FrenchsectTable,FrenchsectChart)
//99
VoiceDirect(MusicVoices,0x63,0x3c,0x04D60BC,0x0,0x0,0x0,0x40,0xff,0x0,0xe0)
//100 brightness - C4
VoiceDirect(MusicVoices,0x64,0x3c,0x04BF480,0x0,0x0,0x0,0xff,0xfc,0x40,0xe0)
//101 (kept for compatibility purposes; use 60 instead)
VoiceMulti(MusicVoices,0x65,FrenchsectTable,FrenchsectChart)
//102 trombone 2 (kept for compatibility purposes; use 66 instead) - C3
VoiceDirect(MusicVoices,0x66,0x3c,0x0265DDC,0x0,0x0,0x0,0x40,0x0,0xff,0xd0)
//103 (kept for compatibility purposes; use 30 instead)
VoiceMulti(MusicVoices,0x67,DistortTable,DistortChart)
//104 (kept for compatibility purposes; use 61 instead)
VoiceMulti(MusicVoices,0x68,BrassTable,BrassChart)
//105 synthstrings (if you are looking for real synthstrings, here they are) - C3-C4
VoiceMulti(MusicVoices,0x69,SynthstringsTable,C3toC4Chart)
//106 synthstrings (kept for compatibility purposes; use 105 instead)
VoiceMulti(MusicVoices,0x6a,SynthstringsTable,C3toC4Chart)
//107 strings1 (kept for compatibility purposes; use 48 instead)
VoiceMulti(MusicVoices,0x6b,Strings1Table,Strings1Chart)
//108 strings1 (kept for compatibility purposes; use 48 instead)
VoiceMulti(MusicVoices,0x6c,Strings1Table,Strings1Chart)
//109 strings1 c3 and c4 at the same time (you can use this so your string instrument only uses one note where it would normally use two) - C4
VoiceDirect(MusicVoices,0x6d,0x3c,0x023B5FC,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//110 kept for compatibility purposes; use 109 instead - C4
VoiceDirect(MusicVoices,0x6e,0x3c,0x023B5FC,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//111 legendary weapon ambience - C3
VoiceDirect(MusicVoices,0x6f,0x3c,0x029A1EC,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
//112 sleigh bell (this is the acoustic bass drum for both 124 and 127, but with the sleigh bell here you can free up that drum slot to have both types of bass drum in one drumset) - C3
VoiceDirect(MusicVoices,0x70,0x3c,0x05016D8,0x0,0x0,0x0,0xff,0xfc,0x0,0xe0)
//113 GS square (50% ratio)
//VoiceDirect(MusicVoices,0x71,0x3c,GSSquare50,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
VoiceDirect(MusicVoices,0x71,0x3c,Squarewave50,0x0,0x0,0x0,0xff,0x0,0xff,0xa0) //uncomment for accuracy in soundfont generation
//114 GS square (25% ratio)
//VoiceDirect(MusicVoices,0x72,0x3c,GSSquare25,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
VoiceDirect(MusicVoices,0x72,0x3c,Squarewave25,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//115 GS square (12,5% ratio)
//VoiceDirect(MusicVoices,0x73,0x3c,GSSquare12p5,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
VoiceDirect(MusicVoices,0x73,0x3c,Squarewave12p5,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//116 orchestral bass drum - C3
VoiceDirect(MusicVoices,0x74,0x3c,0x0502CB4,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
//117 melodic tom (12's high mid tom) - C3
VoiceDirect(MusicVoices,0x75,0x3c,0x0507D60,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
//118 reverse cymbal (slow onset, same sample as 124's "Chinese cymbal". similar sound to 124's crash cymbal 1) - C3
VoiceDirect(MusicVoices,0x76,0x3c,0x04E7244,0x0,0x0,0x0,0xff,0x0,0xff,0xe0)
//119 reverse cymbal (fast onset, same sample as 124's "ride bell". similar sound to 124's crash cymbal 2) - C3
VoiceDirect(MusicVoices,0x77,0x3c,0x04F27CC,0x0,0x0,0x0,0xff,0x0,0xff,0xe0)
//120 Brigand scream ;)
VoiceDirect(MusicVoices,0x78,0x3c,0x0325FE8,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
//121 drum kit
VoiceDrum(MusicVoices,0x79,0x02231F0)
//122 drum kit (kept for compatibility purposes; recommend use 127 instead)
VoiceDrum(MusicVoices,0x7a,0x0222FB0)
//123 drum kit
VoiceDrum(MusicVoices,0x7b,0x02226B0)
//124 drum kit (rock band drums; recommended for if you have a modern-style constant drum beat in the background)
VoiceDrum(MusicVoices,0x7c,0x02228F0)
//125 white noise (probably actually a water sound effect?)
VoiceDirect(MusicVoices,0x7d,0x3c,0x0516680,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//126 applause (fun to use as a background-noise special effect at lower or higher pitches, but also used in stuff like the FE8 arena entrance theme)
VoiceDirect(MusicVoices,0x7e,0x3c,0x02AF0B0,0x0,0x0,0x0,0xff,0x0,0xff,0xa0)
//127 drum kit (marching band drums; recommended for if your drums mostly play flourishes, like drum rolls and cymbals)
VoiceDrum(MusicVoices,0x7f,0x0222FB0)
ORG MusicVoices+0x600

PianoTable:
VoiceDirect(PianoTable,0x0,0x3c,inst0n0,0x0,0x0,0x0,0xff,0xf7,0x0,0xc0)
VoiceDirect(PianoTable,0x1,0x3c,inst0n0,0x0,0x0,0x0,0xff,0xf7,0x0,0xc8)
VoiceDirect(PianoTable,0x2,0x3c,inst0n1,0x0,0x0,0x0,0xff,0xf7,0x0,0xcc)
VoiceDirect(PianoTable,0x3,0x3c,inst0n1,0x0,0x0,0x0,0xff,0xf6,0x0,0xd0)
VoiceDirect(PianoTable,0x4,0x3c,inst0n2,0x0,0x0,0x0,0xff,0xf6,0x0,0xd4)
VoiceDirect(PianoTable,0x5,0x3c,inst0n2,0x0,0x0,0x0,0xff,0xf5,0x0,0xd8)
VoiceDirect(PianoTable,0x6,0x3c,inst0n2,0x0,0x0,0x0,0xff,0xf4,0x0,0xdc)
VoiceDirect(PianoTable,0x7,0x3c,inst0n3,0x0,0x0,0x0,0xff,0xf4,0x0,0xe0)
VoiceDirect(PianoTable,0x8,0x3c,inst0n3,0x0,0x0,0x0,0xff,0xf3,0x0,0xe8)
VoiceDirect(PianoTable,0x9,0x3c,inst0n3,0x0,0x0,0x0,0xff,0xf2,0x0,0xf0)
ORG PianoTable+0x0c*10 //table size =10. Replace the 10 with however many entries your table has.

OrganTable:
VoiceDirect(OrganTable,0x0,0x3c,0x02903C8,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(OrganTable,0x1,0x3c,0x0293544,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
VoiceDirect(OrganTable,0x2,0x3c,0x0293544,0x0,0x0,0x0,0xff,0xf5,0x40,0xe0)
ORG OrganTable+0x0c*3

DistortTable:
VoiceDirect(DistortTable,0x0,0x3c,inst30n0,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(DistortTable,0x1,0x3c,inst30n1,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(DistortTable,0x2,0x3c,inst30n2,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(DistortTable,0x3,0x3c,inst30n3,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(DistortTable,0x4,0x3c,inst30n4,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(DistortTable,0x5,0x3c,inst30n5,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
ORG DistortTable+0x0c*6

Strings1Table:
VoiceDirect(Strings1Table,0x0,0x3c,inst48n0,0x0,0x0,0x0,0x80,0xff,0xe0,0xc0)
VoiceDirect(Strings1Table,0x1,0x3c,inst48n1,0x0,0x0,0x0,0x90,0xff,0xe0,0xc0)
VoiceDirect(Strings1Table,0x2,0x3c,inst48n1,0x0,0x0,0x0,0xa0,0xff,0xe0,0xc4)
VoiceDirect(Strings1Table,0x3,0x3c,inst48n2,0x0,0x0,0x0,0xb0,0xff,0xe0,0xc8)
VoiceDirect(Strings1Table,0x4,0x3c,inst48n2,0x0,0x0,0x0,0xc0,0xff,0xe0,0xcc)
VoiceDirect(Strings1Table,0x5,0x3c,inst48n3,0x0,0x0,0x0,0xd0,0xff,0xe0,0xd0)
VoiceDirect(Strings1Table,0x6,0x3c,inst48n4,0x0,0x0,0x0,0xe0,0xff,0xe0,0xd4)
VoiceDirect(Strings1Table,0x7,0x3c,inst48n4,0x0,0x0,0x0,0xff,0xff,0xe0,0xd8)
VoiceDirect(Strings1Table,0x8,0x3c,inst48n5,0x0,0x0,0x0,0xff,0xff,0xe0,0xdc)
VoiceDirect(Strings1Table,0x9,0x3c,inst48n5,0x0,0x0,0x0,0xff,0xff,0xe0,0xe0)
VoiceDirect(Strings1Table,0xa,0x3c,inst48n6,0x0,0x0,0x0,0xff,0xfe,0xe0,0xe8)
VoiceDirect(Strings1Table,0xb,0x3c,inst48n6,0x0,0x0,0x0,0xff,0xf5,0xc0,0xf0)
ORG Strings1Table+0x0c*12

Strings2Table:
VoiceDirect(Strings2Table,0x0,0x3c,0x022B4DC,0x0,0x0,0x0,0x80,0x0,0xff,0xb8)
VoiceDirect(Strings2Table,0x1,0x3c,0x022B4DC,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(Strings2Table,0x2,0x3c,0x0233650,0x0,0x0,0x0,0xff,0x0,0xff,0xc8)
VoiceDirect(Strings2Table,0x3,0x3c,0x02A0690,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
ORG Strings2Table+0x0c*4

ChoirTable:
VoiceDirect(ChoirTable,0x0,0x3c,inst52n0,0x0,0x0,0x0,0x80,0x0,0xff,0xc0)
VoiceDirect(ChoirTable,0x1,0x3c,inst52n1,0x0,0x0,0x0,0xa0,0x0,0xff,0xd0)
VoiceDirect(ChoirTable,0x2,0x3c,inst52n2,0x0,0x0,0x0,0xc0,0x0,0xff,0xd4)
VoiceDirect(ChoirTable,0x3,0x3c,inst52n3,0x0,0x0,0x0,0xff,0x0,0xff,0xd8)
VoiceDirect(ChoirTable,0x4,0x3c,inst52n4,0x0,0x0,0x0,0xff,0x0,0xff,0xdc)
VoiceDirect(ChoirTable,0x5,0x3c,inst52n4,0x0,0x0,0x0,0xff,0xf5,0x80,0xe0)
ORG ChoirTable+0x0c*6

ChoirPadTable:
VoiceDirect(ChoirPadTable,0x0,0x3c,inst52n0,0x0,0x0,0x0,0x3,0xff,0x40,0xf0)
VoiceDirect(ChoirPadTable,0x1,0x3c,inst52n1,0x0,0x0,0x0,0x4,0xff,0x40,0xf0)
VoiceDirect(ChoirPadTable,0x2,0x3c,inst52n2,0x0,0x0,0x0,0x5,0xff,0x40,0xf0)
VoiceDirect(ChoirPadTable,0x3,0x3c,inst52n3,0x0,0x0,0x0,0x5,0xff,0x40,0xf0)
VoiceDirect(ChoirPadTable,0x4,0x3c,inst52n4,0x0,0x0,0x0,0x6,0xff,0x40,0xf0)
VoiceDirect(ChoirPadTable,0x5,0x3c,inst52n4,0x0,0x0,0x0,0x8,0xf5,0x40,0xf0)
ORG ChoirPadTable+0x0c*6

TrumpetTable:
VoiceDirect(TrumpetTable,0x0,0x3c,0x02CBE8C,0x0,0x0,0x0,0x80,0x0,0xff,0xc0)
VoiceDirect(TrumpetTable,0x1,0x3c,0x02CBE8C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(TrumpetTable,0x2,0x3c,0x02CD7F4,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
VoiceDirect(TrumpetTable,0x3,0x3c,0x02CD7F4,0x0,0x0,0x0,0xff,0xf0,0x80,0xe0)
ORG TrumpetTable+0x0c*4

FrenchsectTable:
VoiceDirect(FrenchsectTable,0x0,0x3c,inst60n0,0x0,0x0,0x0,0x80,0xff,0xb0,0xc0)
VoiceDirect(FrenchsectTable,0x1,0x3c,inst60n1,0x0,0x0,0x0,0xff,0xff,0xb0,0xc0)
VoiceDirect(FrenchsectTable,0x2,0x3c,inst60n2,0x0,0x0,0x0,0xff,0xff,0xb0,0xc8)
VoiceDirect(FrenchsectTable,0x3,0x3c,inst60n3,0x0,0x0,0x0,0xff,0xff,0xb0,0xd0)
VoiceDirect(FrenchsectTable,0x4,0x3c,inst60n4,0x0,0x0,0x0,0xff,0xff,0xb0,0xd8)
VoiceDirect(FrenchsectTable,0x5,0x3c,inst60n4,0x0,0x0,0x0,0xff,0xf5,0xa0,0xe0)
ORG FrenchsectTable+0xc*6

BrassTable:
VoiceDirect(BrassTable,0x0,0x3c,inst61n0,0x0,0x0,0x0,0xff,0xff,0xc0,0xc0)
VoiceDirect(BrassTable,0x1,0x3c,inst61n1,0x0,0x0,0x0,0xff,0xff,0xc0,0xc8)
VoiceDirect(BrassTable,0x2,0x3c,inst61n2,0x0,0x0,0x0,0xff,0xff,0xc0,0xcc)
VoiceDirect(BrassTable,0x3,0x3c,inst61n3,0x0,0x0,0x0,0xff,0xff,0xc0,0xd0)
VoiceDirect(BrassTable,0x4,0x3c,inst61n4,0x0,0x0,0x0,0xff,0xff,0xc0,0xd4)
VoiceDirect(BrassTable,0x5,0x3c,inst61n5,0x0,0x0,0x0,0xff,0xff,0xc0,0xd8)
VoiceDirect(BrassTable,0x6,0x3c,inst61n5,0x0,0x0,0x0,0xff,0xfe,0xc0,0xdc)
VoiceDirect(BrassTable,0x7,0x3c,inst61n5,0x0,0x0,0x0,0xff,0xf5,0x80,0xe0)
ORG BrassTable+0xc*8

BrassPadTable:
VoiceDirect(BrassPadTable,0x0,0x3c,inst61n0,0x0,0x0,0x0,0x4,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x1,0x3c,inst61n1,0x0,0x0,0x0,0x5,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x2,0x3c,inst61n2,0x0,0x0,0x0,0x5,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x3,0x3c,inst61n3,0x0,0x0,0x0,0x6,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x4,0x3c,inst61n4,0x0,0x0,0x0,0x6,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x5,0x3c,inst61n4,0x0,0x0,0x0,0x7,0xff,0x40,0xf0)
VoiceDirect(BrassPadTable,0x6,0x3c,inst61n5,0x0,0x0,0x0,0x8,0xfe,0x40,0xf0)
VoiceDirect(BrassPadTable,0x7,0x3c,inst61n5,0x0,0x0,0x0,0x10,0xf5,0x0,0xf0)
ORG BrassPadTable+0xc*8

OboeTable:
VoiceDirect(OboeTable,0x0,0x3c,inst68n0,0x0,0x0,0x0,0x80,0xff,0xd0,0xc0)
VoiceDirect(OboeTable,0x1,0x3c,inst68n0,0x0,0x0,0x0,0xff,0xff,0xd0,0xc0)
VoiceDirect(OboeTable,0x2,0x3c,inst68n1,0x0,0x0,0x0,0xff,0xff,0xd0,0xc0)
VoiceDirect(OboeTable,0x3,0x3c,inst68n1,0x0,0x0,0x0,0xff,0xf5,0x80,0xd0)
ORG OboeTable+0x0c*4

BassoonTable:
VoiceDirect(BassoonTable,0x0,0x3c,0x02A7AA8,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(BassoonTable,0x1,0x3c,0x0280AF0,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(BassoonTable,0x2,0x3c,0x027E28C,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
VoiceDirect(BassoonTable,0x3,0x3c,0x027E28C,0x0,0x0,0x0,0xff,0xfa,0x40,0xd0)
ORG BassoonTable+0x0c*4

FluteTable:
VoiceDirect(FluteTable,0x0,0x3c,0x04D373C,0x0,0x0,0x0,0x80,0x0,0xff,0xc0)
VoiceDirect(FluteTable,0x1,0x3c,0x04D373C,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(FluteTable,0x2,0x3c,0x027E640,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
ORG FluteTable+0x0c*3

SynthstringsTable:
VoiceDirect(SynthstringsTable,0x0,0x3c,0x0281DD0,0x0,0x0,0x0,0xff,0x0,0xff,0xc0)
VoiceDirect(SynthstringsTable,0x1,0x3c,0x04D1AD4,0x0,0x0,0x0,0xff,0x0,0xff,0xd0)
ORG SynthstringsTable+0x0c*2

SawleadTable:
VoiceDirect(SawleadTable,0x0,0x3c,inst81n0,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
VoiceDirect(SawleadTable,0x1,0x3c,inst81n1,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
VoiceDirect(SawleadTable,0x2,0x3c,inst81n2,0x0,0x0,0x0,0xff,0x0,0xff,0xb0)
VoiceDirect(SawleadTable,0x3,0x3c,inst81n2,0x0,0x0,0x0,0xff,0xf5,0x0,0xe0)
ORG SawleadTable+0xc*4

SawleadPadTable:
VoiceDirect(SawleadPadTable,0x0,0x3c,inst81n0,0x0,0x0,0x0,0x5,0xff,0x40,0xf0)
VoiceDirect(SawleadPadTable,0x1,0x3c,inst81n1,0x0,0x0,0x0,0x6,0xff,0x40,0xf0)
VoiceDirect(SawleadPadTable,0x2,0x3c,inst81n2,0x0,0x0,0x0,0x7,0xff,0x40,0xf0)
VoiceDirect(SawleadPadTable,0x3,0x3c,inst81n2,0x0,0x0,0x0,0x10,0xf5,0x0,0xf0)
ORG SawleadPadTable+0xc*4


//POP

//note charts

//Note: if you don't want yet another file to include for each chart, you can just use BYTE commands to "write out" the charts.
//for example: BYTE $00 $00 $00 $00 $00 $01 $01 $01 $02 $02 $02 etc. You can just copy and paste the bytes from the
//note chart files included if you don't get it. Each byte is a note on the proverbial piano, so you're telling the game "this instrument
//should use sample 0 for notes x thru y, sample 1 for y thru z, etc.

PianoChart:
ALIGN 4
#incbin "note charts/notechart-0.dmp"

DistortChart:
ALIGN 4
#incbin "note charts/notechart-30.dmp"

Strings1Chart:
ALIGN 4
#incbin "note charts/notechart-48.dmp"

ChoirChart:
ALIGN 4
#incbin "note charts/notechart-52.dmp"

TrumpetChart:
ALIGN 4
#incbin "note charts/notechart-56.dmp"

FrenchsectChart:
ALIGN 4
#incbin "note charts/notechart-60.dmp"

BrassChart:
ALIGN 4
#incbin "note charts/notechart-61.dmp"

OboeChart:
ALIGN 4
#incbin "note charts/notechart-68.dmp"

C2toC3Chart:
ALIGN 4
#incbin "note charts/notechart-c2toc3.dmp"

C2toC5Chart:
ALIGN 4
#incbin "note charts/notechart-c2toc5.dmp"

C3toC4Chart:
ALIGN 4
#incbin "note charts/notechart-c3toc4.dmp"

C3toC5Chart:
ALIGN 4
#incbin "note charts/notechart-c3toc5.dmp"

C3toC6Chart:
ALIGN 4
#incbin "note charts/notechart-c3toc6.dmp"

//samples

inst0n0:
#incbin "samples/inst0-0.dmp"

inst0n1:
#incbin "samples/inst0-1.dmp"

inst0n2:
#incbin "samples/inst0-2.dmp"

inst0n3:
#incbin "samples/inst0-3.dmp"

inst6:
#incbin "samples/inst6.dmp"

inst24:
#incbin "samples/inst24.dmp"

inst30n0:
#incbin "samples/inst30-0.dmp"

inst30n1:
#incbin "samples/inst30-1.dmp"

inst30n2:
#incbin "samples/inst30-2.dmp"

inst30n3:
#incbin "samples/inst30-3.dmp"

inst30n4:
#incbin "samples/inst30-4.dmp"

inst30n5:
#incbin "samples/inst30-5.dmp"

inst34:
#incbin "samples/inst34.dmp"

inst48n0:
#incbin "samples/inst48-0.dmp"

inst48n1:
#incbin "samples/inst48-1.dmp"

inst48n2:
#incbin "samples/inst48-2.dmp"

inst48n3:
#incbin "samples/inst48-3.dmp"

inst48n4:
#incbin "samples/inst48-4.dmp"

inst48n5:
#incbin "samples/inst48-5.dmp"

inst48n6:
#incbin "samples/inst48-6.dmp"

inst52n0:
#incbin "samples/inst52-0.dmp"

inst52n1:
#incbin "samples/inst52-1.dmp"

inst52n2:
#incbin "samples/inst52-2.dmp"

inst52n3:
#incbin "samples/inst52-3.dmp"

inst52n4:
#incbin "samples/inst52-4.dmp"

inst55:
#incbin "samples/inst55.dmp"

inst60n0:
#incbin "samples/inst60-0.dmp"

inst60n1:
#incbin "samples/inst60-1.dmp"

inst60n2:
#incbin "samples/inst60-2.dmp"

inst60n3:
#incbin "samples/inst60-3.dmp"

inst60n4:
#incbin "samples/inst60-4.dmp"

inst61n0:
#incbin "samples/inst61-0.dmp"

inst61n1:
#incbin "samples/inst61-1.dmp"

inst61n2:
#incbin "samples/inst61-2.dmp"

inst61n3:
#incbin "samples/inst61-3.dmp"

inst61n4:
#incbin "samples/inst61-4.dmp"

inst61n5:
#incbin "samples/inst61-5.dmp"

inst68n0:
#incbin "samples/inst68-0.dmp"

inst68n1:
#incbin "samples/inst68-1.dmp"

inst81n0:
#incbin "samples/inst81-0.dmp"

inst81n1:
#incbin "samples/inst81-1.dmp"

inst81n2:
#incbin "samples/inst81-2.dmp"

Squarewave50:
#incbin "samples/squarewave50.dmp"

Squarewave25:
#incbin "samples/squarewave25.dmp"

Squarewave12p5:
#incbin "samples/squarewave12p5.dmp"

//"GS" instruments refer to the synth instruments used in Golden Sun, which can be used in your FE mod given you have ipatix's sound mixer installed.
//The triangle and bass wave do not have any customizable parameters, but you can use GSSquareMacro to make a square wave with custom parameters.
//These samples are useful for emulating the sound of many GBA games, which use square waves alongside Direct samples to make their music.
//Since using square waves in music is off limits in GBA FE because square waves are already used for sound effects, you can "cheat" by using
//these GS synths as if they were regular directsound voices.
//Refer to bregalad's mp2k sound engine documentation for more information.

GSTriangle:
BYTE $00 $00 $00 $40 $20 $89 $05 $01 $00 $00 $00 $00 $00 $00 $00 $00 $80 $02 $00 $00

GSSaw:
BYTE $00 $00 $00 $40 $20 $89 $05 $01 $00 $00 $00 $00 $00 $00 $00 $00 $80 $01 $00 $00

#define GSSquareMacro(InitialDutyCycle,CycleSpeed,CycleAmplitude,CycleOffset) "BYTE $00 $00 $00 $40 $20 $89 $05 $01 $00 $00 $00 $00 $00 $00 $00 $00 $80 $00 InitialDutyCycle CycleSpeed CycleAmplitude CycleOffset $00 $00"

GSDance:
GSSquareMacro(0x10,0xf0,0xe0,0x80)

GSDanceBass:
GSSquareMacro(0x60,0x20,0x30,0x80)

GSSquare50:
GSSquareMacro(0x80,0xf0,0x0,0x80)

GSSquare25:
GSSquareMacro(0x40,0xf0,0x10,0x80)

GSSquare12p5:
GSSquareMacro(0x20,0xf0,0x20,0x80)

#include "SoundRoomInstaller.event"

#else
ERROR You are not assembling FE8 events!
#endif
